
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,rightADDASSIGNSUBASSIGNMULASSIGNDIVASSIGN=leftEQNOTEQGREATEREQLESSEREQ><left+-DOTADDDOTMINUSleft*/DOTMULDOTDIVright\'nonassoc{}ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMINUS DOTMUL ELSE EQ EYE FLOATNUM FOR GREATEREQ ID IF INTNUM LESSEREQ MULASSIGN NORMSTRING NOTEQ ONES PRINT RETURN SUBASSIGN WHILE ZEROSprogram : statement_list primary_expression   : ID\n                            | INTNUM\n                            | FLOATNUM\n                            | \'(\' expression \')\'\n                            | \'[\' \']\'\n                            | \'[\' index_expression_list \']\' postfix_expression   : primary_expression\n                            | array_expression\n                            | postfix_expression "\'" index_expression     : \':\'\n                            | expression index_expression_list : index_expression \n                             | index_expression_list \',\' index_expression\n                             | index_expression_list \';\' index_expression_list print_index_expression_list  : ID\n                                    | print_index_expression_list \',\' ID  array_expression : ID \'(\' index_expression_list \')\' \n                        | ID \'[\' index_expression_list \']\' \n                        unary_expression     : postfix_expression\n                            | \'-\' postfix_expressionmultiplicative_expression    : unary_expression\n                                    | multiplicative_expression \'*\' unary_expression\n                                    | multiplicative_expression \'/\' unary_expression \n                                    | multiplicative_expression DOTMUL unary_expression\n                                    | multiplicative_expression DOTDIV unary_expression additive_expression  : multiplicative_expression\n                            | additive_expression \'+\' multiplicative_expression\n                            | additive_expression \'-\' multiplicative_expression\n                            | additive_expression DOTADD multiplicative_expression\n                            | additive_expression DOTMINUS multiplicative_expression                            relational_expression    : additive_expression\n                                | relational_expression \'<\' additive_expression\n                                | relational_expression \'>\' additive_expression\n                                | relational_expression LESSEREQ additive_expression\n                                | relational_expression GREATEREQ additive_expression equality_expression  : relational_expression\n                            | equality_expression EQ relational_expression\n                            | equality_expression NOTEQ relational_expression special_expression   : equality_expression\n                            | ZEROS \'(\' additive_expression \')\'\n                            | ONES \'(\' additive_expression \')\'\n                            | EYE \'(\' additive_expression \')\' \n                            | PRINT print_index_expression_list \n                            | PRINT NORMSTRING \n                            | RETURN postfix_expression\n                            | CONTINUE\n                            | BREAKexpression   : special_expression\n                    | expression \':\' special_expression assignment_expression    : postfix_expression \'=\' expression\n                                | postfix_expression ADDASSIGN expression\n                                | postfix_expression SUBASSIGN expression\n                                | postfix_expression MULASSIGN expression\n                                | postfix_expression DIVASSIGN expressioneostmt   :  \',\'\n                |  \';\' statement    : assignment_statement\n                    | expression_statement\n                    | selection_statement\n                    | iteration_statement statement_list    : statement\n                         | statement statement_list expression_statement     : eostmt\n                                | expression eostmtassignment_statement     : assignment_expression eostmt selection_statement  : IF \'(\' expression \')\' statement \n                            | IF \'(\' expression \')\' statement ELSE statement \n                            | IF \'(\' expression \')\' \'{\' statement_list \'}\'\n                            | IF \'(\' expression \')\' \'{\' statement_list \'}\' ELSE \'{\' statement_list \'}\'\n                            iteration_statement  : WHILE \'(\' expression \')\' \'{\' statement_list \'}\'\n                            | FOR ID \'=\' expression \'{\' statement_list \'}\' \n                            | FOR \'(\' ID \'=\' expression \')\' \'{\' statement_list \'}\'  '
    
_lr_action_items = {'IF':([0,3,4,5,6,7,9,17,18,39,40,117,129,130,131,132,134,139,140,141,142,143,146,147,149,],[11,11,-58,-59,-60,-61,-64,-56,-57,-66,-65,11,-67,11,11,11,11,-68,-69,-71,-72,11,11,-73,-70,]),'WHILE':([0,3,4,5,6,7,9,17,18,39,40,117,129,130,131,132,134,139,140,141,142,143,146,147,149,],[13,13,-58,-59,-60,-61,-64,-56,-57,-66,-65,13,-67,13,13,13,13,-68,-69,-71,-72,13,13,-73,-70,]),'FOR':([0,3,4,5,6,7,9,17,18,39,40,117,129,130,131,132,134,139,140,141,142,143,146,147,149,],[14,14,-58,-59,-60,-61,-64,-56,-57,-66,-65,14,-67,14,14,14,14,-68,-69,-71,-72,14,14,-73,-70,]),',':([0,3,4,5,6,7,8,9,10,15,16,17,18,19,20,21,22,24,29,30,31,32,34,35,37,39,40,44,55,65,66,67,68,69,70,71,72,73,82,83,85,89,90,91,92,93,94,95,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,134,139,140,141,142,143,146,147,149,],[17,17,-58,-59,-60,-61,17,-64,17,-2,-20,-56,-57,-49,-8,-9,-40,-32,-47,-48,-3,-4,-37,-27,-22,-66,-65,-20,-10,105,-45,-16,-46,-6,107,-13,-11,-12,-21,-50,-5,107,107,-51,-52,-53,-54,-55,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,17,-18,-19,-41,-42,-43,-17,-14,107,-67,17,17,17,17,-68,-69,-71,-72,17,17,-73,-70,]),';':([0,3,4,5,6,7,8,9,10,15,16,17,18,19,20,21,22,24,29,30,31,32,34,35,37,39,40,44,55,65,66,67,68,69,70,71,72,73,82,83,85,89,90,91,92,93,94,95,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,134,139,140,141,142,143,146,147,149,],[18,18,-58,-59,-60,-61,18,-64,18,-2,-20,-56,-57,-49,-8,-9,-40,-32,-47,-48,-3,-4,-37,-27,-22,-66,-65,-20,-10,-44,-45,-16,-46,-6,108,-13,-11,-12,-21,-50,-5,108,108,-51,-52,-53,-54,-55,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,18,-18,-19,-41,-42,-43,-17,-14,108,-67,18,18,18,18,-68,-69,-71,-72,18,18,-73,-70,]),'ZEROS':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[23,23,-58,-59,-60,-61,-64,23,-56,-57,23,-66,-65,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-67,23,23,23,23,-68,-69,-71,-72,23,23,-73,-70,]),'ONES':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[25,25,-58,-59,-60,-61,-64,25,-56,-57,25,-66,-65,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-67,25,25,25,25,-68,-69,-71,-72,25,25,-73,-70,]),'EYE':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[26,26,-58,-59,-60,-61,-64,26,-56,-57,26,-66,-65,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-67,26,26,26,26,-68,-69,-71,-72,26,26,-73,-70,]),'PRINT':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[27,27,-58,-59,-60,-61,-64,27,-56,-57,27,-66,-65,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-67,27,27,27,27,-68,-69,-71,-72,27,27,-73,-70,]),'RETURN':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[28,28,-58,-59,-60,-61,-64,28,-56,-57,28,-66,-65,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-67,28,28,28,28,-68,-69,-71,-72,28,28,-73,-70,]),'CONTINUE':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[29,29,-58,-59,-60,-61,-64,29,-56,-57,29,-66,-65,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-67,29,29,29,29,-68,-69,-71,-72,29,29,-73,-70,]),'BREAK':([0,3,4,5,6,7,9,12,17,18,33,39,40,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[30,30,-58,-59,-60,-61,-64,30,-56,-57,30,-66,-65,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-67,30,30,30,30,-68,-69,-71,-72,30,30,-73,-70,]),'ID':([0,3,4,5,6,7,9,12,14,17,18,27,28,33,36,39,40,41,42,45,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,105,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[15,15,-58,-59,-60,-61,-64,15,46,-56,-57,67,15,15,15,-66,-65,15,15,15,88,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,126,15,15,15,15,-67,15,15,15,15,-68,-69,-71,-72,15,15,-73,-70,]),'INTNUM':([0,3,4,5,6,7,9,12,17,18,28,33,36,39,40,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[31,31,-58,-59,-60,-61,-64,31,-56,-57,31,31,31,-66,-65,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-67,31,31,31,31,-68,-69,-71,-72,31,31,-73,-70,]),'FLOATNUM':([0,3,4,5,6,7,9,12,17,18,28,33,36,39,40,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[32,32,-58,-59,-60,-61,-64,32,-56,-57,32,32,32,-66,-65,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-67,32,32,32,32,-68,-69,-71,-72,32,32,-73,-70,]),'(':([0,3,4,5,6,7,9,11,12,13,14,15,17,18,23,25,26,28,33,36,39,40,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[12,12,-58,-59,-60,-61,-64,42,12,45,47,48,-56,-57,58,63,64,12,12,12,-66,-65,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-67,12,12,12,12,-68,-69,-71,-72,12,12,-73,-70,]),'[':([0,3,4,5,6,7,9,12,15,17,18,28,33,36,39,40,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,129,130,131,132,134,139,140,141,142,143,146,147,149,],[33,33,-58,-59,-60,-61,-64,33,49,-56,-57,33,33,33,-66,-65,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-67,33,33,33,33,-68,-69,-71,-72,33,33,-73,-70,]),'-':([0,3,4,5,6,7,9,12,15,16,17,18,20,21,24,31,32,33,35,37,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,74,75,76,77,78,79,80,81,82,85,87,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,129,130,131,132,134,139,140,141,142,143,146,147,149,],[36,36,-58,-59,-60,-61,-64,36,-2,-20,-56,-57,-8,-9,60,-3,-4,36,-27,-22,-66,-65,36,36,-20,36,36,36,36,36,36,36,36,-10,36,36,36,36,36,36,36,36,36,-6,36,36,36,36,36,36,36,36,-21,-5,36,60,-28,-29,-30,-31,60,60,-7,36,36,60,60,60,60,-23,-24,-25,-26,36,36,-18,-19,-67,36,36,36,36,-68,-69,-71,-72,36,36,-73,-70,]),'$end':([1,2,3,4,5,6,7,9,17,18,38,39,40,129,139,140,141,142,147,149,],[0,-1,-62,-58,-59,-60,-61,-64,-56,-57,-63,-66,-65,-67,-68,-69,-71,-72,-73,-70,]),'}':([3,4,5,6,7,9,17,18,38,39,40,129,135,136,137,139,140,141,142,145,147,148,149,],[-62,-58,-59,-60,-61,-64,-56,-57,-63,-66,-65,-67,140,141,142,-68,-69,-71,-72,147,-73,149,-70,]),'ELSE':([4,5,6,7,9,17,18,39,40,129,139,140,141,142,147,149,],[-58,-59,-60,-61,-64,-56,-57,-66,-65,134,-68,-69,-71,-72,-73,-70,]),':':([10,15,16,19,20,21,22,24,29,30,31,32,33,34,35,37,43,44,48,49,55,65,66,67,68,69,73,82,83,84,85,86,91,92,93,94,95,96,97,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,119,121,122,123,124,125,126,133,],[41,-2,-20,-49,-8,-9,-40,-32,-47,-48,-3,-4,72,-37,-27,-22,41,-20,72,72,-10,-44,-45,-16,-46,-6,41,-21,-50,41,-5,41,41,41,41,41,41,-38,-39,-28,-29,-30,-31,-7,72,72,-33,-34,-35,-36,-23,-24,-25,-26,41,-18,-19,-41,-42,-43,-17,41,]),'=':([15,16,20,21,31,32,46,55,69,85,88,106,121,122,],[-2,50,-8,-9,-3,-4,87,-10,-6,-5,120,-7,-18,-19,]),'ADDASSIGN':([15,16,20,21,31,32,55,69,85,106,121,122,],[-2,51,-8,-9,-3,-4,-10,-6,-5,-7,-18,-19,]),'SUBASSIGN':([15,16,20,21,31,32,55,69,85,106,121,122,],[-2,52,-8,-9,-3,-4,-10,-6,-5,-7,-18,-19,]),'MULASSIGN':([15,16,20,21,31,32,55,69,85,106,121,122,],[-2,53,-8,-9,-3,-4,-10,-6,-5,-7,-18,-19,]),'DIVASSIGN':([15,16,20,21,31,32,55,69,85,106,121,122,],[-2,54,-8,-9,-3,-4,-10,-6,-5,-7,-18,-19,]),"'":([15,16,20,21,31,32,44,55,68,69,82,85,106,121,122,],[-2,55,-8,-9,-3,-4,55,-10,55,-6,55,-5,-7,-18,-19,]),'*':([15,16,20,21,31,32,35,37,44,55,69,82,85,99,100,101,102,106,113,114,115,116,121,122,],[-2,-20,-8,-9,-3,-4,78,-22,-20,-10,-6,-21,-5,78,78,78,78,-7,-23,-24,-25,-26,-18,-19,]),'/':([15,16,20,21,31,32,35,37,44,55,69,82,85,99,100,101,102,106,113,114,115,116,121,122,],[-2,-20,-8,-9,-3,-4,79,-22,-20,-10,-6,-21,-5,79,79,79,79,-7,-23,-24,-25,-26,-18,-19,]),'DOTMUL':([15,16,20,21,31,32,35,37,44,55,69,82,85,99,100,101,102,106,113,114,115,116,121,122,],[-2,-20,-8,-9,-3,-4,80,-22,-20,-10,-6,-21,-5,80,80,80,80,-7,-23,-24,-25,-26,-18,-19,]),'DOTDIV':([15,16,20,21,31,32,35,37,44,55,69,82,85,99,100,101,102,106,113,114,115,116,121,122,],[-2,-20,-8,-9,-3,-4,81,-22,-20,-10,-6,-21,-5,81,81,81,81,-7,-23,-24,-25,-26,-18,-19,]),'+':([15,16,20,21,24,31,32,35,37,44,55,69,82,85,98,99,100,101,102,103,104,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,59,-3,-4,-27,-22,-20,-10,-6,-21,-5,59,-28,-29,-30,-31,59,59,-7,59,59,59,59,-23,-24,-25,-26,-18,-19,]),'DOTADD':([15,16,20,21,24,31,32,35,37,44,55,69,82,85,98,99,100,101,102,103,104,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,61,-3,-4,-27,-22,-20,-10,-6,-21,-5,61,-28,-29,-30,-31,61,61,-7,61,61,61,61,-23,-24,-25,-26,-18,-19,]),'DOTMINUS':([15,16,20,21,24,31,32,35,37,44,55,69,82,85,98,99,100,101,102,103,104,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,62,-3,-4,-27,-22,-20,-10,-6,-21,-5,62,-28,-29,-30,-31,62,62,-7,62,62,62,62,-23,-24,-25,-26,-18,-19,]),'<':([15,16,20,21,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,-32,-3,-4,74,-27,-22,-20,-10,-6,-21,-5,74,74,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),'>':([15,16,20,21,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,-32,-3,-4,75,-27,-22,-20,-10,-6,-21,-5,75,75,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),'LESSEREQ':([15,16,20,21,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,-32,-3,-4,76,-27,-22,-20,-10,-6,-21,-5,76,76,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),'GREATEREQ':([15,16,20,21,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,-32,-3,-4,77,-27,-22,-20,-10,-6,-21,-5,77,77,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),'EQ':([15,16,20,21,22,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,56,-32,-3,-4,-37,-27,-22,-20,-10,-6,-21,-5,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),'NOTEQ':([15,16,20,21,22,24,31,32,34,35,37,44,55,69,82,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,],[-2,-20,-8,-9,57,-32,-3,-4,-37,-27,-22,-20,-10,-6,-21,-5,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,]),')':([15,19,20,21,22,24,29,30,31,32,34,35,37,43,44,55,65,66,67,68,69,71,72,73,82,83,84,85,86,89,96,97,98,99,100,101,102,103,104,106,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,128,133,],[-2,-49,-8,-9,-40,-32,-47,-48,-3,-4,-37,-27,-22,85,-20,-10,-44,-45,-16,-46,-6,-13,-11,-12,-21,-50,117,-5,118,121,-38,-39,123,-28,-29,-30,-31,124,125,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,-41,-42,-43,-17,-14,-15,138,]),']':([15,19,20,21,22,24,29,30,31,32,33,34,35,37,44,55,65,66,67,68,69,70,71,72,73,82,83,85,90,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,128,],[-2,-49,-8,-9,-40,-32,-47,-48,-3,-4,69,-37,-27,-22,-20,-10,-44,-45,-16,-46,-6,106,-13,-11,-12,-21,-50,-5,122,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,-18,-19,-41,-42,-43,-17,-14,-15,]),'{':([15,19,20,21,22,24,29,30,31,32,34,35,37,44,55,65,66,67,68,69,82,83,85,96,97,99,100,101,102,106,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,138,144,],[-2,-49,-8,-9,-40,-32,-47,-48,-3,-4,-37,-27,-22,-20,-10,-44,-45,-16,-46,-6,-21,-50,-5,-38,-39,-28,-29,-30,-31,-7,-33,-34,-35,-36,-23,-24,-25,-26,130,131,132,-18,-19,-41,-42,-43,-17,143,146,]),'NORMSTRING':([27,],[66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,130,131,132,143,146,],[2,38,135,136,137,145,148,]),'statement':([0,3,117,130,131,132,134,143,146,],[3,3,129,3,3,3,139,3,3,]),'assignment_statement':([0,3,117,130,131,132,134,143,146,],[4,4,4,4,4,4,4,4,4,]),'expression_statement':([0,3,117,130,131,132,134,143,146,],[5,5,5,5,5,5,5,5,5,]),'selection_statement':([0,3,117,130,131,132,134,143,146,],[6,6,6,6,6,6,6,6,6,]),'iteration_statement':([0,3,117,130,131,132,134,143,146,],[7,7,7,7,7,7,7,7,7,]),'assignment_expression':([0,3,117,130,131,132,134,143,146,],[8,8,8,8,8,8,8,8,8,]),'eostmt':([0,3,8,10,117,130,131,132,134,143,146,],[9,9,39,40,9,9,9,9,9,9,9,]),'expression':([0,3,12,33,42,45,48,49,50,51,52,53,54,87,107,108,117,120,130,131,132,134,143,146,],[10,10,43,73,84,86,73,73,91,92,93,94,95,119,73,73,10,133,10,10,10,10,10,10,]),'postfix_expression':([0,3,12,28,33,36,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,130,131,132,134,143,146,],[16,16,44,68,44,82,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,16,44,16,16,16,16,16,16,]),'special_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,130,131,132,134,143,146,],[19,19,19,19,83,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'primary_expression':([0,3,12,28,33,36,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,130,131,132,134,143,146,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_expression':([0,3,12,28,33,36,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,130,131,132,134,143,146,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'equality_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,87,107,108,117,120,130,131,132,134,143,146,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'additive_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,56,57,58,63,64,74,75,76,77,87,107,108,117,120,130,131,132,134,143,146,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,98,103,104,109,110,111,112,24,24,24,24,24,24,24,24,24,24,24,]),'relational_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,56,57,87,107,108,117,120,130,131,132,134,143,146,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,96,97,34,34,34,34,34,34,34,34,34,34,34,]),'multiplicative_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,87,107,108,117,120,130,131,132,134,143,146,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,99,100,101,102,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'unary_expression':([0,3,12,33,41,42,45,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,74,75,76,77,78,79,80,81,87,107,108,117,120,130,131,132,134,143,146,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,113,114,115,116,37,37,37,37,37,37,37,37,37,37,37,]),'print_index_expression_list':([27,],[65,]),'index_expression_list':([33,48,49,108,],[70,89,90,128,]),'index_expression':([33,48,49,107,108,],[71,71,71,127,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Mparser.py',19),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','Mparser.py',24),
  ('primary_expression -> INTNUM','primary_expression',1,'p_primary_expression','Mparser.py',25),
  ('primary_expression -> FLOATNUM','primary_expression',1,'p_primary_expression','Mparser.py',26),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','Mparser.py',27),
  ('primary_expression -> [ ]','primary_expression',2,'p_primary_expression','Mparser.py',28),
  ('primary_expression -> [ index_expression_list ]','primary_expression',3,'p_primary_expression','Mparser.py',29),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','Mparser.py',42),
  ('postfix_expression -> array_expression','postfix_expression',1,'p_postfix_expression','Mparser.py',43),
  ("postfix_expression -> postfix_expression '",'postfix_expression',2,'p_postfix_expression','Mparser.py',44),
  ('index_expression -> :','index_expression',1,'p_index_expression','Mparser.py',52),
  ('index_expression -> expression','index_expression',1,'p_index_expression','Mparser.py',53),
  ('index_expression_list -> index_expression','index_expression_list',1,'p_index_expression_list','Mparser.py',57),
  ('index_expression_list -> index_expression_list , index_expression','index_expression_list',3,'p_index_expression_list','Mparser.py',58),
  ('index_expression_list -> index_expression_list ; index_expression_list','index_expression_list',3,'p_index_expression_list','Mparser.py',59),
  ('print_index_expression_list -> ID','print_index_expression_list',1,'p_print_index_expression_list','Mparser.py',78),
  ('print_index_expression_list -> print_index_expression_list , ID','print_index_expression_list',3,'p_print_index_expression_list','Mparser.py',79),
  ('array_expression -> ID ( index_expression_list )','array_expression',4,'p_array_expression','Mparser.py',88),
  ('array_expression -> ID [ index_expression_list ]','array_expression',4,'p_array_expression','Mparser.py',89),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','Mparser.py',99),
  ('unary_expression -> - postfix_expression','unary_expression',2,'p_unary_expression','Mparser.py',100),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','Mparser.py',108),
  ('multiplicative_expression -> multiplicative_expression * unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Mparser.py',109),
  ('multiplicative_expression -> multiplicative_expression / unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Mparser.py',110),
  ('multiplicative_expression -> multiplicative_expression DOTMUL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Mparser.py',111),
  ('multiplicative_expression -> multiplicative_expression DOTDIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Mparser.py',112),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','Mparser.py',126),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','Mparser.py',127),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','Mparser.py',128),
  ('additive_expression -> additive_expression DOTADD multiplicative_expression','additive_expression',3,'p_additive_expression','Mparser.py',129),
  ('additive_expression -> additive_expression DOTMINUS multiplicative_expression','additive_expression',3,'p_additive_expression','Mparser.py',130),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','Mparser.py',148),
  ('relational_expression -> relational_expression < additive_expression','relational_expression',3,'p_relational_expression','Mparser.py',149),
  ('relational_expression -> relational_expression > additive_expression','relational_expression',3,'p_relational_expression','Mparser.py',150),
  ('relational_expression -> relational_expression LESSEREQ additive_expression','relational_expression',3,'p_relational_expression','Mparser.py',151),
  ('relational_expression -> relational_expression GREATEREQ additive_expression','relational_expression',3,'p_relational_expression','Mparser.py',152),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','Mparser.py',165),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','Mparser.py',166),
  ('equality_expression -> equality_expression NOTEQ relational_expression','equality_expression',3,'p_equality_expression','Mparser.py',167),
  ('special_expression -> equality_expression','special_expression',1,'p_special_expression','Mparser.py',176),
  ('special_expression -> ZEROS ( additive_expression )','special_expression',4,'p_special_expression','Mparser.py',177),
  ('special_expression -> ONES ( additive_expression )','special_expression',4,'p_special_expression','Mparser.py',178),
  ('special_expression -> EYE ( additive_expression )','special_expression',4,'p_special_expression','Mparser.py',179),
  ('special_expression -> PRINT print_index_expression_list','special_expression',2,'p_special_expression','Mparser.py',180),
  ('special_expression -> PRINT NORMSTRING','special_expression',2,'p_special_expression','Mparser.py',181),
  ('special_expression -> RETURN postfix_expression','special_expression',2,'p_special_expression','Mparser.py',182),
  ('special_expression -> CONTINUE','special_expression',1,'p_special_expression','Mparser.py',183),
  ('special_expression -> BREAK','special_expression',1,'p_special_expression','Mparser.py',184),
  ('expression -> special_expression','expression',1,'p_expression','Mparser.py',205),
  ('expression -> expression : special_expression','expression',3,'p_expression','Mparser.py',206),
  ('assignment_expression -> postfix_expression = expression','assignment_expression',3,'p_assignment_expression','Mparser.py',214),
  ('assignment_expression -> postfix_expression ADDASSIGN expression','assignment_expression',3,'p_assignment_expression','Mparser.py',215),
  ('assignment_expression -> postfix_expression SUBASSIGN expression','assignment_expression',3,'p_assignment_expression','Mparser.py',216),
  ('assignment_expression -> postfix_expression MULASSIGN expression','assignment_expression',3,'p_assignment_expression','Mparser.py',217),
  ('assignment_expression -> postfix_expression DIVASSIGN expression','assignment_expression',3,'p_assignment_expression','Mparser.py',218),
  ('eostmt -> ,','eostmt',1,'p_eostmt','Mparser.py',231),
  ('eostmt -> ;','eostmt',1,'p_eostmt','Mparser.py',232),
  ('statement -> assignment_statement','statement',1,'p_statement','Mparser.py',236),
  ('statement -> expression_statement','statement',1,'p_statement','Mparser.py',237),
  ('statement -> selection_statement','statement',1,'p_statement','Mparser.py',238),
  ('statement -> iteration_statement','statement',1,'p_statement','Mparser.py',239),
  ('statement_list -> statement','statement_list',1,'p_statement_list','Mparser.py',245),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','Mparser.py',246),
  ('expression_statement -> eostmt','expression_statement',1,'p_expression_statement','Mparser.py',255),
  ('expression_statement -> expression eostmt','expression_statement',2,'p_expression_statement','Mparser.py',256),
  ('assignment_statement -> assignment_expression eostmt','assignment_statement',2,'p_assignment_statement','Mparser.py',264),
  ('selection_statement -> IF ( expression ) statement','selection_statement',5,'p_selection_statement','Mparser.py',268),
  ('selection_statement -> IF ( expression ) statement ELSE statement','selection_statement',7,'p_selection_statement','Mparser.py',269),
  ('selection_statement -> IF ( expression ) { statement_list }','selection_statement',7,'p_selection_statement','Mparser.py',270),
  ('selection_statement -> IF ( expression ) { statement_list } ELSE { statement_list }','selection_statement',11,'p_selection_statement','Mparser.py',271),
  ('iteration_statement -> WHILE ( expression ) { statement_list }','iteration_statement',7,'p_iteration_statement','Mparser.py',283),
  ('iteration_statement -> FOR ID = expression { statement_list }','iteration_statement',7,'p_iteration_statement','Mparser.py',284),
  ('iteration_statement -> FOR ( ID = expression ) { statement_list }','iteration_statement',9,'p_iteration_statement','Mparser.py',285),
]
